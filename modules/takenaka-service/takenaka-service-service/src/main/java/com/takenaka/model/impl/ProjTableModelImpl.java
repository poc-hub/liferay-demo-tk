/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.takenaka.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.ProxyUtil;

import com.takenaka.model.ProjTable;
import com.takenaka.model.ProjTableModel;
import com.takenaka.model.ProjTableSoap;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ProjTable service. Represents a row in the &quot;PROJTABLE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ProjTableModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProjTableImpl}.
 * </p>
 *
 * @author Sanjay.Panchal
 * @see ProjTableImpl
 * @generated
 */
@JSON(strict = true)
public class ProjTableModelImpl
	extends BaseModelImpl<ProjTable> implements ProjTableModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a proj table model instance should use the <code>ProjTable</code> interface instead.
	 */
	public static final String TABLE_NAME = "PROJTABLE";

	public static final Object[][] TABLE_COLUMNS = {
		{"REC_ID", Types.BIGINT}, {"GROUP_ID", Types.BIGINT},
		{"GROUP_FLAG", Types.VARCHAR}, {"YOSO_KOJI_CD", Types.VARCHAR},
		{"SEKKEI_CD", Types.VARCHAR}, {"SEKKEI_CD_YY", Types.VARCHAR},
		{"MITUMORI_NENDO", Types.VARCHAR}, {"MITUMORI_CD", Types.VARCHAR},
		{"KOJI_CD", Types.VARCHAR}, {"MITUMORI_SEIRI_NO", Types.VARCHAR},
		{"SHUKAN_SEKKEI_CD", Types.VARCHAR},
		{"SEKKEI_TOGO_SAKI", Types.VARCHAR},
		{"SEKKEI_BUNKATU_MOTO", Types.VARCHAR},
		{"JUTAKU_SEKKEI_TAISHO", Types.VARCHAR},
		{"HONSITEN_RID", Types.VARCHAR}, {"HONSITEN_GID", Types.VARCHAR},
		{"ORG_YKOJI", Types.VARCHAR}, {"ORG_JKOJI", Types.VARCHAR},
		{"ORG_MDD", Types.VARCHAR}, {"ORG_PDD", Types.VARCHAR},
		{"ORG_ESMAS", Types.VARCHAR}, {"ORG_PRIST", Types.VARCHAR},
		{"PROC_SEKKEI", Types.VARCHAR}, {"PROC_MITUMORI", Types.VARCHAR},
		{"PROC_SEKKEI_OEN", Types.VARCHAR}, {"PROC_SEKKEI_TOGO", Types.VARCHAR},
		{"PROC_SEKKEI_BUNKATU", Types.VARCHAR},
		{"PROC_SEKKEI_JUTAKU", Types.VARCHAR},
		{"TAKETU_CHUSI_TOKETU_KB", Types.VARCHAR},
		{"KANRYO_CHUSI_STATUS", Types.VARCHAR},
		{"MITUMORI_KEIJO_SHUBETU", Types.VARCHAR},
		{"TORIKESI_KB", Types.VARCHAR}, {"KESSAN_NENDO", Types.VARCHAR},
		{"UPD_DATE", Types.VARCHAR}, {"UPD_TIME", Types.VARCHAR}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("REC_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("GROUP_ID", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("GROUP_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("YOSO_KOJI_CD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SEKKEI_CD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SEKKEI_CD_YY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MITUMORI_NENDO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MITUMORI_CD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KOJI_CD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MITUMORI_SEIRI_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SHUKAN_SEKKEI_CD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SEKKEI_TOGO_SAKI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SEKKEI_BUNKATU_MOTO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("JUTAKU_SEKKEI_TAISHO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("HONSITEN_RID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("HONSITEN_GID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_YKOJI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_JKOJI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_MDD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_PDD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_ESMAS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORG_PRIST", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_SEKKEI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_MITUMORI", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_SEKKEI_OEN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_SEKKEI_TOGO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_SEKKEI_BUNKATU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROC_SEKKEI_JUTAKU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TAKETU_CHUSI_TOKETU_KB", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KANRYO_CHUSI_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MITUMORI_KEIJO_SHUBETU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TORIKESI_KB", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("KESSAN_NENDO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UPD_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UPD_TIME", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE =
		"create table PROJTABLE (REC_ID LONG not null primary key,GROUP_ID LONG,GROUP_FLAG VARCHAR(75) null,YOSO_KOJI_CD VARCHAR(75) null,SEKKEI_CD VARCHAR(75) null,SEKKEI_CD_YY VARCHAR(75) null,MITUMORI_NENDO VARCHAR(75) null,MITUMORI_CD VARCHAR(75) null,KOJI_CD VARCHAR(75) null,MITUMORI_SEIRI_NO VARCHAR(75) null,SHUKAN_SEKKEI_CD VARCHAR(75) null,SEKKEI_TOGO_SAKI VARCHAR(75) null,SEKKEI_BUNKATU_MOTO VARCHAR(75) null,JUTAKU_SEKKEI_TAISHO VARCHAR(75) null,HONSITEN_RID VARCHAR(75) null,HONSITEN_GID VARCHAR(75) null,ORG_YKOJI VARCHAR(75) null,ORG_JKOJI VARCHAR(75) null,ORG_MDD VARCHAR(75) null,ORG_PDD VARCHAR(75) null,ORG_ESMAS VARCHAR(75) null,ORG_PRIST VARCHAR(75) null,PROC_SEKKEI VARCHAR(75) null,PROC_MITUMORI VARCHAR(75) null,PROC_SEKKEI_OEN VARCHAR(75) null,PROC_SEKKEI_TOGO VARCHAR(75) null,PROC_SEKKEI_BUNKATU VARCHAR(75) null,PROC_SEKKEI_JUTAKU VARCHAR(75) null,TAKETU_CHUSI_TOKETU_KB VARCHAR(75) null,KANRYO_CHUSI_STATUS VARCHAR(75) null,MITUMORI_KEIJO_SHUBETU VARCHAR(75) null,TORIKESI_KB VARCHAR(75) null,KESSAN_NENDO VARCHAR(75) null,UPD_DATE VARCHAR(75) null,UPD_TIME VARCHAR(75) null)";

	public static final String TABLE_SQL_DROP = "drop table PROJTABLE";

	public static final String ORDER_BY_JPQL = " ORDER BY projTable.recId ASC";

	public static final String ORDER_BY_SQL = " ORDER BY PROJTABLE.REC_ID ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static ProjTable toModel(ProjTableSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		ProjTable model = new ProjTableImpl();

		model.setRecId(soapModel.getRecId());
		model.setGroupId(soapModel.getGroupId());
		model.setGroupFlag(soapModel.getGroupFlag());
		model.setYosoKojiCd(soapModel.getYosoKojiCd());
		model.setSekkeiCd(soapModel.getSekkeiCd());
		model.setSekkeiCdYy(soapModel.getSekkeiCdYy());
		model.setMitumoriNendo(soapModel.getMitumoriNendo());
		model.setMitumoriCd(soapModel.getMitumoriCd());
		model.setKojiCd(soapModel.getKojiCd());
		model.setMitumoriSeiriNo(soapModel.getMitumoriSeiriNo());
		model.setShukanSekkeiCd(soapModel.getShukanSekkeiCd());
		model.setSekkeiTogoSaki(soapModel.getSekkeiTogoSaki());
		model.setSekkeiBunkatuMoto(soapModel.getSekkeiBunkatuMoto());
		model.setJutakuSekkeiTaisho(soapModel.getJutakuSekkeiTaisho());
		model.setHonsitenRid(soapModel.getHonsitenRid());
		model.setHonsitenGid(soapModel.getHonsitenGid());
		model.setOrgYkoji(soapModel.getOrgYkoji());
		model.setOrgJKOJI(soapModel.getOrgJKOJI());
		model.setOrgMdd(soapModel.getOrgMdd());
		model.setOrgPdd(soapModel.getOrgPdd());
		model.setOrgEsmas(soapModel.getOrgEsmas());
		model.setOrgPrist(soapModel.getOrgPrist());
		model.setProcSekkei(soapModel.getProcSekkei());
		model.setProcMitumori(soapModel.getProcMitumori());
		model.setProcSekkeiOen(soapModel.getProcSekkeiOen());
		model.setProcSekkeiTogo(soapModel.getProcSekkeiTogo());
		model.setProcSekkeiBunkatu(soapModel.getProcSekkeiBunkatu());
		model.setProcSekkeiJutaku(soapModel.getProcSekkeiJutaku());
		model.setTaketuChusiToketuKb(soapModel.getTaketuChusiToketuKb());
		model.setKanryoChusiStatus(soapModel.getKanryoChusiStatus());
		model.setMitumoriKeijoShubetu(soapModel.getMitumoriKeijoShubetu());
		model.setTorikesiKb(soapModel.getTorikesiKb());
		model.setKessanNendo(soapModel.getKessanNendo());
		model.setUpdDate(soapModel.getUpdDate());
		model.setUpdTime(soapModel.getUpdTime());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<ProjTable> toModels(ProjTableSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<ProjTable> models = new ArrayList<ProjTable>(soapModels.length);

		for (ProjTableSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public ProjTableModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _recId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setRecId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _recId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ProjTable.class;
	}

	@Override
	public String getModelClassName() {
		return ProjTable.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ProjTable, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ProjTable, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProjTable, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((ProjTable)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ProjTable, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ProjTable, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ProjTable)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ProjTable, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ProjTable, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ProjTable>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ProjTable.class.getClassLoader(), ProjTable.class,
			ModelWrapper.class);

		try {
			Constructor<ProjTable> constructor =
				(Constructor<ProjTable>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ProjTable, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ProjTable, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ProjTable, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<ProjTable, Object>>();
		Map<String, BiConsumer<ProjTable, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ProjTable, ?>>();

		attributeGetterFunctions.put("recId", ProjTable::getRecId);
		attributeSetterBiConsumers.put(
			"recId", (BiConsumer<ProjTable, Long>)ProjTable::setRecId);
		attributeGetterFunctions.put("groupId", ProjTable::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<ProjTable, Long>)ProjTable::setGroupId);
		attributeGetterFunctions.put("groupFlag", ProjTable::getGroupFlag);
		attributeSetterBiConsumers.put(
			"groupFlag",
			(BiConsumer<ProjTable, String>)ProjTable::setGroupFlag);
		attributeGetterFunctions.put("yosoKojiCd", ProjTable::getYosoKojiCd);
		attributeSetterBiConsumers.put(
			"yosoKojiCd",
			(BiConsumer<ProjTable, String>)ProjTable::setYosoKojiCd);
		attributeGetterFunctions.put("sekkeiCd", ProjTable::getSekkeiCd);
		attributeSetterBiConsumers.put(
			"sekkeiCd", (BiConsumer<ProjTable, String>)ProjTable::setSekkeiCd);
		attributeGetterFunctions.put("sekkeiCdYy", ProjTable::getSekkeiCdYy);
		attributeSetterBiConsumers.put(
			"sekkeiCdYy",
			(BiConsumer<ProjTable, String>)ProjTable::setSekkeiCdYy);
		attributeGetterFunctions.put(
			"mitumoriNendo", ProjTable::getMitumoriNendo);
		attributeSetterBiConsumers.put(
			"mitumoriNendo",
			(BiConsumer<ProjTable, String>)ProjTable::setMitumoriNendo);
		attributeGetterFunctions.put("mitumoriCd", ProjTable::getMitumoriCd);
		attributeSetterBiConsumers.put(
			"mitumoriCd",
			(BiConsumer<ProjTable, String>)ProjTable::setMitumoriCd);
		attributeGetterFunctions.put("kojiCd", ProjTable::getKojiCd);
		attributeSetterBiConsumers.put(
			"kojiCd", (BiConsumer<ProjTable, String>)ProjTable::setKojiCd);
		attributeGetterFunctions.put(
			"mitumoriSeiriNo", ProjTable::getMitumoriSeiriNo);
		attributeSetterBiConsumers.put(
			"mitumoriSeiriNo",
			(BiConsumer<ProjTable, String>)ProjTable::setMitumoriSeiriNo);
		attributeGetterFunctions.put(
			"shukanSekkeiCd", ProjTable::getShukanSekkeiCd);
		attributeSetterBiConsumers.put(
			"shukanSekkeiCd",
			(BiConsumer<ProjTable, String>)ProjTable::setShukanSekkeiCd);
		attributeGetterFunctions.put(
			"sekkeiTogoSaki", ProjTable::getSekkeiTogoSaki);
		attributeSetterBiConsumers.put(
			"sekkeiTogoSaki",
			(BiConsumer<ProjTable, String>)ProjTable::setSekkeiTogoSaki);
		attributeGetterFunctions.put(
			"sekkeiBunkatuMoto", ProjTable::getSekkeiBunkatuMoto);
		attributeSetterBiConsumers.put(
			"sekkeiBunkatuMoto",
			(BiConsumer<ProjTable, String>)ProjTable::setSekkeiBunkatuMoto);
		attributeGetterFunctions.put(
			"jutakuSekkeiTaisho", ProjTable::getJutakuSekkeiTaisho);
		attributeSetterBiConsumers.put(
			"jutakuSekkeiTaisho",
			(BiConsumer<ProjTable, String>)ProjTable::setJutakuSekkeiTaisho);
		attributeGetterFunctions.put("honsitenRid", ProjTable::getHonsitenRid);
		attributeSetterBiConsumers.put(
			"honsitenRid",
			(BiConsumer<ProjTable, String>)ProjTable::setHonsitenRid);
		attributeGetterFunctions.put("honsitenGid", ProjTable::getHonsitenGid);
		attributeSetterBiConsumers.put(
			"honsitenGid",
			(BiConsumer<ProjTable, String>)ProjTable::setHonsitenGid);
		attributeGetterFunctions.put("orgYkoji", ProjTable::getOrgYkoji);
		attributeSetterBiConsumers.put(
			"orgYkoji", (BiConsumer<ProjTable, String>)ProjTable::setOrgYkoji);
		attributeGetterFunctions.put("orgJKOJI", ProjTable::getOrgJKOJI);
		attributeSetterBiConsumers.put(
			"orgJKOJI", (BiConsumer<ProjTable, String>)ProjTable::setOrgJKOJI);
		attributeGetterFunctions.put("orgMdd", ProjTable::getOrgMdd);
		attributeSetterBiConsumers.put(
			"orgMdd", (BiConsumer<ProjTable, String>)ProjTable::setOrgMdd);
		attributeGetterFunctions.put("orgPdd", ProjTable::getOrgPdd);
		attributeSetterBiConsumers.put(
			"orgPdd", (BiConsumer<ProjTable, String>)ProjTable::setOrgPdd);
		attributeGetterFunctions.put("orgEsmas", ProjTable::getOrgEsmas);
		attributeSetterBiConsumers.put(
			"orgEsmas", (BiConsumer<ProjTable, String>)ProjTable::setOrgEsmas);
		attributeGetterFunctions.put("orgPrist", ProjTable::getOrgPrist);
		attributeSetterBiConsumers.put(
			"orgPrist", (BiConsumer<ProjTable, String>)ProjTable::setOrgPrist);
		attributeGetterFunctions.put("procSekkei", ProjTable::getProcSekkei);
		attributeSetterBiConsumers.put(
			"procSekkei",
			(BiConsumer<ProjTable, String>)ProjTable::setProcSekkei);
		attributeGetterFunctions.put(
			"procMitumori", ProjTable::getProcMitumori);
		attributeSetterBiConsumers.put(
			"procMitumori",
			(BiConsumer<ProjTable, String>)ProjTable::setProcMitumori);
		attributeGetterFunctions.put(
			"procSekkeiOen", ProjTable::getProcSekkeiOen);
		attributeSetterBiConsumers.put(
			"procSekkeiOen",
			(BiConsumer<ProjTable, String>)ProjTable::setProcSekkeiOen);
		attributeGetterFunctions.put(
			"procSekkeiTogo", ProjTable::getProcSekkeiTogo);
		attributeSetterBiConsumers.put(
			"procSekkeiTogo",
			(BiConsumer<ProjTable, String>)ProjTable::setProcSekkeiTogo);
		attributeGetterFunctions.put(
			"procSekkeiBunkatu", ProjTable::getProcSekkeiBunkatu);
		attributeSetterBiConsumers.put(
			"procSekkeiBunkatu",
			(BiConsumer<ProjTable, String>)ProjTable::setProcSekkeiBunkatu);
		attributeGetterFunctions.put(
			"procSekkeiJutaku", ProjTable::getProcSekkeiJutaku);
		attributeSetterBiConsumers.put(
			"procSekkeiJutaku",
			(BiConsumer<ProjTable, String>)ProjTable::setProcSekkeiJutaku);
		attributeGetterFunctions.put(
			"taketuChusiToketuKb", ProjTable::getTaketuChusiToketuKb);
		attributeSetterBiConsumers.put(
			"taketuChusiToketuKb",
			(BiConsumer<ProjTable, String>)ProjTable::setTaketuChusiToketuKb);
		attributeGetterFunctions.put(
			"kanryoChusiStatus", ProjTable::getKanryoChusiStatus);
		attributeSetterBiConsumers.put(
			"kanryoChusiStatus",
			(BiConsumer<ProjTable, String>)ProjTable::setKanryoChusiStatus);
		attributeGetterFunctions.put(
			"mitumoriKeijoShubetu", ProjTable::getMitumoriKeijoShubetu);
		attributeSetterBiConsumers.put(
			"mitumoriKeijoShubetu",
			(BiConsumer<ProjTable, String>)ProjTable::setMitumoriKeijoShubetu);
		attributeGetterFunctions.put("torikesiKb", ProjTable::getTorikesiKb);
		attributeSetterBiConsumers.put(
			"torikesiKb",
			(BiConsumer<ProjTable, String>)ProjTable::setTorikesiKb);
		attributeGetterFunctions.put("kessanNendo", ProjTable::getKessanNendo);
		attributeSetterBiConsumers.put(
			"kessanNendo",
			(BiConsumer<ProjTable, String>)ProjTable::setKessanNendo);
		attributeGetterFunctions.put("updDate", ProjTable::getUpdDate);
		attributeSetterBiConsumers.put(
			"updDate", (BiConsumer<ProjTable, String>)ProjTable::setUpdDate);
		attributeGetterFunctions.put("updTime", ProjTable::getUpdTime);
		attributeSetterBiConsumers.put(
			"updTime", (BiConsumer<ProjTable, String>)ProjTable::setUpdTime);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public long getRecId() {
		return _recId;
	}

	@Override
	public void setRecId(long recId) {
		_recId = recId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public String getGroupFlag() {
		if (_groupFlag == null) {
			return "";
		}
		else {
			return _groupFlag;
		}
	}

	@Override
	public void setGroupFlag(String groupFlag) {
		_groupFlag = groupFlag;
	}

	@JSON
	@Override
	public String getYosoKojiCd() {
		if (_yosoKojiCd == null) {
			return "";
		}
		else {
			return _yosoKojiCd;
		}
	}

	@Override
	public void setYosoKojiCd(String yosoKojiCd) {
		_yosoKojiCd = yosoKojiCd;
	}

	@JSON
	@Override
	public String getSekkeiCd() {
		if (_sekkeiCd == null) {
			return "";
		}
		else {
			return _sekkeiCd;
		}
	}

	@Override
	public void setSekkeiCd(String sekkeiCd) {
		_sekkeiCd = sekkeiCd;
	}

	@JSON
	@Override
	public String getSekkeiCdYy() {
		if (_sekkeiCdYy == null) {
			return "";
		}
		else {
			return _sekkeiCdYy;
		}
	}

	@Override
	public void setSekkeiCdYy(String sekkeiCdYy) {
		_sekkeiCdYy = sekkeiCdYy;
	}

	@JSON
	@Override
	public String getMitumoriNendo() {
		if (_mitumoriNendo == null) {
			return "";
		}
		else {
			return _mitumoriNendo;
		}
	}

	@Override
	public void setMitumoriNendo(String mitumoriNendo) {
		_mitumoriNendo = mitumoriNendo;
	}

	@JSON
	@Override
	public String getMitumoriCd() {
		if (_mitumoriCd == null) {
			return "";
		}
		else {
			return _mitumoriCd;
		}
	}

	@Override
	public void setMitumoriCd(String mitumoriCd) {
		_mitumoriCd = mitumoriCd;
	}

	@JSON
	@Override
	public String getKojiCd() {
		if (_kojiCd == null) {
			return "";
		}
		else {
			return _kojiCd;
		}
	}

	@Override
	public void setKojiCd(String kojiCd) {
		_kojiCd = kojiCd;
	}

	@JSON
	@Override
	public String getMitumoriSeiriNo() {
		if (_mitumoriSeiriNo == null) {
			return "";
		}
		else {
			return _mitumoriSeiriNo;
		}
	}

	@Override
	public void setMitumoriSeiriNo(String mitumoriSeiriNo) {
		_mitumoriSeiriNo = mitumoriSeiriNo;
	}

	@JSON
	@Override
	public String getShukanSekkeiCd() {
		if (_shukanSekkeiCd == null) {
			return "";
		}
		else {
			return _shukanSekkeiCd;
		}
	}

	@Override
	public void setShukanSekkeiCd(String shukanSekkeiCd) {
		_shukanSekkeiCd = shukanSekkeiCd;
	}

	@JSON
	@Override
	public String getSekkeiTogoSaki() {
		if (_sekkeiTogoSaki == null) {
			return "";
		}
		else {
			return _sekkeiTogoSaki;
		}
	}

	@Override
	public void setSekkeiTogoSaki(String sekkeiTogoSaki) {
		_sekkeiTogoSaki = sekkeiTogoSaki;
	}

	@JSON
	@Override
	public String getSekkeiBunkatuMoto() {
		if (_sekkeiBunkatuMoto == null) {
			return "";
		}
		else {
			return _sekkeiBunkatuMoto;
		}
	}

	@Override
	public void setSekkeiBunkatuMoto(String sekkeiBunkatuMoto) {
		_sekkeiBunkatuMoto = sekkeiBunkatuMoto;
	}

	@JSON
	@Override
	public String getJutakuSekkeiTaisho() {
		if (_jutakuSekkeiTaisho == null) {
			return "";
		}
		else {
			return _jutakuSekkeiTaisho;
		}
	}

	@Override
	public void setJutakuSekkeiTaisho(String jutakuSekkeiTaisho) {
		_jutakuSekkeiTaisho = jutakuSekkeiTaisho;
	}

	@JSON
	@Override
	public String getHonsitenRid() {
		if (_honsitenRid == null) {
			return "";
		}
		else {
			return _honsitenRid;
		}
	}

	@Override
	public void setHonsitenRid(String honsitenRid) {
		_honsitenRid = honsitenRid;
	}

	@JSON
	@Override
	public String getHonsitenGid() {
		if (_honsitenGid == null) {
			return "";
		}
		else {
			return _honsitenGid;
		}
	}

	@Override
	public void setHonsitenGid(String honsitenGid) {
		_honsitenGid = honsitenGid;
	}

	@JSON
	@Override
	public String getOrgYkoji() {
		if (_orgYkoji == null) {
			return "";
		}
		else {
			return _orgYkoji;
		}
	}

	@Override
	public void setOrgYkoji(String orgYkoji) {
		_orgYkoji = orgYkoji;
	}

	@JSON
	@Override
	public String getOrgJKOJI() {
		if (_orgJKOJI == null) {
			return "";
		}
		else {
			return _orgJKOJI;
		}
	}

	@Override
	public void setOrgJKOJI(String orgJKOJI) {
		_orgJKOJI = orgJKOJI;
	}

	@JSON
	@Override
	public String getOrgMdd() {
		if (_orgMdd == null) {
			return "";
		}
		else {
			return _orgMdd;
		}
	}

	@Override
	public void setOrgMdd(String orgMdd) {
		_orgMdd = orgMdd;
	}

	@JSON
	@Override
	public String getOrgPdd() {
		if (_orgPdd == null) {
			return "";
		}
		else {
			return _orgPdd;
		}
	}

	@Override
	public void setOrgPdd(String orgPdd) {
		_orgPdd = orgPdd;
	}

	@JSON
	@Override
	public String getOrgEsmas() {
		if (_orgEsmas == null) {
			return "";
		}
		else {
			return _orgEsmas;
		}
	}

	@Override
	public void setOrgEsmas(String orgEsmas) {
		_orgEsmas = orgEsmas;
	}

	@JSON
	@Override
	public String getOrgPrist() {
		if (_orgPrist == null) {
			return "";
		}
		else {
			return _orgPrist;
		}
	}

	@Override
	public void setOrgPrist(String orgPrist) {
		_orgPrist = orgPrist;
	}

	@JSON
	@Override
	public String getProcSekkei() {
		if (_procSekkei == null) {
			return "";
		}
		else {
			return _procSekkei;
		}
	}

	@Override
	public void setProcSekkei(String procSekkei) {
		_procSekkei = procSekkei;
	}

	@JSON
	@Override
	public String getProcMitumori() {
		if (_procMitumori == null) {
			return "";
		}
		else {
			return _procMitumori;
		}
	}

	@Override
	public void setProcMitumori(String procMitumori) {
		_procMitumori = procMitumori;
	}

	@JSON
	@Override
	public String getProcSekkeiOen() {
		if (_procSekkeiOen == null) {
			return "";
		}
		else {
			return _procSekkeiOen;
		}
	}

	@Override
	public void setProcSekkeiOen(String procSekkeiOen) {
		_procSekkeiOen = procSekkeiOen;
	}

	@JSON
	@Override
	public String getProcSekkeiTogo() {
		if (_procSekkeiTogo == null) {
			return "";
		}
		else {
			return _procSekkeiTogo;
		}
	}

	@Override
	public void setProcSekkeiTogo(String procSekkeiTogo) {
		_procSekkeiTogo = procSekkeiTogo;
	}

	@JSON
	@Override
	public String getProcSekkeiBunkatu() {
		if (_procSekkeiBunkatu == null) {
			return "";
		}
		else {
			return _procSekkeiBunkatu;
		}
	}

	@Override
	public void setProcSekkeiBunkatu(String procSekkeiBunkatu) {
		_procSekkeiBunkatu = procSekkeiBunkatu;
	}

	@JSON
	@Override
	public String getProcSekkeiJutaku() {
		if (_procSekkeiJutaku == null) {
			return "";
		}
		else {
			return _procSekkeiJutaku;
		}
	}

	@Override
	public void setProcSekkeiJutaku(String procSekkeiJutaku) {
		_procSekkeiJutaku = procSekkeiJutaku;
	}

	@JSON
	@Override
	public String getTaketuChusiToketuKb() {
		if (_taketuChusiToketuKb == null) {
			return "";
		}
		else {
			return _taketuChusiToketuKb;
		}
	}

	@Override
	public void setTaketuChusiToketuKb(String taketuChusiToketuKb) {
		_taketuChusiToketuKb = taketuChusiToketuKb;
	}

	@JSON
	@Override
	public String getKanryoChusiStatus() {
		if (_kanryoChusiStatus == null) {
			return "";
		}
		else {
			return _kanryoChusiStatus;
		}
	}

	@Override
	public void setKanryoChusiStatus(String kanryoChusiStatus) {
		_kanryoChusiStatus = kanryoChusiStatus;
	}

	@JSON
	@Override
	public String getMitumoriKeijoShubetu() {
		if (_mitumoriKeijoShubetu == null) {
			return "";
		}
		else {
			return _mitumoriKeijoShubetu;
		}
	}

	@Override
	public void setMitumoriKeijoShubetu(String mitumoriKeijoShubetu) {
		_mitumoriKeijoShubetu = mitumoriKeijoShubetu;
	}

	@JSON
	@Override
	public String getTorikesiKb() {
		if (_torikesiKb == null) {
			return "";
		}
		else {
			return _torikesiKb;
		}
	}

	@Override
	public void setTorikesiKb(String torikesiKb) {
		_torikesiKb = torikesiKb;
	}

	@JSON
	@Override
	public String getKessanNendo() {
		if (_kessanNendo == null) {
			return "";
		}
		else {
			return _kessanNendo;
		}
	}

	@Override
	public void setKessanNendo(String kessanNendo) {
		_kessanNendo = kessanNendo;
	}

	@JSON
	@Override
	public String getUpdDate() {
		if (_updDate == null) {
			return "";
		}
		else {
			return _updDate;
		}
	}

	@Override
	public void setUpdDate(String updDate) {
		_updDate = updDate;
	}

	@JSON
	@Override
	public String getUpdTime() {
		if (_updTime == null) {
			return "";
		}
		else {
			return _updTime;
		}
	}

	@Override
	public void setUpdTime(String updTime) {
		_updTime = updTime;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			0, ProjTable.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public ProjTable toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ProjTable>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ProjTableImpl projTableImpl = new ProjTableImpl();

		projTableImpl.setRecId(getRecId());
		projTableImpl.setGroupId(getGroupId());
		projTableImpl.setGroupFlag(getGroupFlag());
		projTableImpl.setYosoKojiCd(getYosoKojiCd());
		projTableImpl.setSekkeiCd(getSekkeiCd());
		projTableImpl.setSekkeiCdYy(getSekkeiCdYy());
		projTableImpl.setMitumoriNendo(getMitumoriNendo());
		projTableImpl.setMitumoriCd(getMitumoriCd());
		projTableImpl.setKojiCd(getKojiCd());
		projTableImpl.setMitumoriSeiriNo(getMitumoriSeiriNo());
		projTableImpl.setShukanSekkeiCd(getShukanSekkeiCd());
		projTableImpl.setSekkeiTogoSaki(getSekkeiTogoSaki());
		projTableImpl.setSekkeiBunkatuMoto(getSekkeiBunkatuMoto());
		projTableImpl.setJutakuSekkeiTaisho(getJutakuSekkeiTaisho());
		projTableImpl.setHonsitenRid(getHonsitenRid());
		projTableImpl.setHonsitenGid(getHonsitenGid());
		projTableImpl.setOrgYkoji(getOrgYkoji());
		projTableImpl.setOrgJKOJI(getOrgJKOJI());
		projTableImpl.setOrgMdd(getOrgMdd());
		projTableImpl.setOrgPdd(getOrgPdd());
		projTableImpl.setOrgEsmas(getOrgEsmas());
		projTableImpl.setOrgPrist(getOrgPrist());
		projTableImpl.setProcSekkei(getProcSekkei());
		projTableImpl.setProcMitumori(getProcMitumori());
		projTableImpl.setProcSekkeiOen(getProcSekkeiOen());
		projTableImpl.setProcSekkeiTogo(getProcSekkeiTogo());
		projTableImpl.setProcSekkeiBunkatu(getProcSekkeiBunkatu());
		projTableImpl.setProcSekkeiJutaku(getProcSekkeiJutaku());
		projTableImpl.setTaketuChusiToketuKb(getTaketuChusiToketuKb());
		projTableImpl.setKanryoChusiStatus(getKanryoChusiStatus());
		projTableImpl.setMitumoriKeijoShubetu(getMitumoriKeijoShubetu());
		projTableImpl.setTorikesiKb(getTorikesiKb());
		projTableImpl.setKessanNendo(getKessanNendo());
		projTableImpl.setUpdDate(getUpdDate());
		projTableImpl.setUpdTime(getUpdTime());

		projTableImpl.resetOriginalValues();

		return projTableImpl;
	}

	@Override
	public int compareTo(ProjTable projTable) {
		long primaryKey = projTable.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ProjTable)) {
			return false;
		}

		ProjTable projTable = (ProjTable)obj;

		long primaryKey = projTable.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ProjTable> toCacheModel() {
		ProjTableCacheModel projTableCacheModel = new ProjTableCacheModel();

		projTableCacheModel.recId = getRecId();

		projTableCacheModel.groupId = getGroupId();

		projTableCacheModel.groupFlag = getGroupFlag();

		String groupFlag = projTableCacheModel.groupFlag;

		if ((groupFlag != null) && (groupFlag.length() == 0)) {
			projTableCacheModel.groupFlag = null;
		}

		projTableCacheModel.yosoKojiCd = getYosoKojiCd();

		String yosoKojiCd = projTableCacheModel.yosoKojiCd;

		if ((yosoKojiCd != null) && (yosoKojiCd.length() == 0)) {
			projTableCacheModel.yosoKojiCd = null;
		}

		projTableCacheModel.sekkeiCd = getSekkeiCd();

		String sekkeiCd = projTableCacheModel.sekkeiCd;

		if ((sekkeiCd != null) && (sekkeiCd.length() == 0)) {
			projTableCacheModel.sekkeiCd = null;
		}

		projTableCacheModel.sekkeiCdYy = getSekkeiCdYy();

		String sekkeiCdYy = projTableCacheModel.sekkeiCdYy;

		if ((sekkeiCdYy != null) && (sekkeiCdYy.length() == 0)) {
			projTableCacheModel.sekkeiCdYy = null;
		}

		projTableCacheModel.mitumoriNendo = getMitumoriNendo();

		String mitumoriNendo = projTableCacheModel.mitumoriNendo;

		if ((mitumoriNendo != null) && (mitumoriNendo.length() == 0)) {
			projTableCacheModel.mitumoriNendo = null;
		}

		projTableCacheModel.mitumoriCd = getMitumoriCd();

		String mitumoriCd = projTableCacheModel.mitumoriCd;

		if ((mitumoriCd != null) && (mitumoriCd.length() == 0)) {
			projTableCacheModel.mitumoriCd = null;
		}

		projTableCacheModel.kojiCd = getKojiCd();

		String kojiCd = projTableCacheModel.kojiCd;

		if ((kojiCd != null) && (kojiCd.length() == 0)) {
			projTableCacheModel.kojiCd = null;
		}

		projTableCacheModel.mitumoriSeiriNo = getMitumoriSeiriNo();

		String mitumoriSeiriNo = projTableCacheModel.mitumoriSeiriNo;

		if ((mitumoriSeiriNo != null) && (mitumoriSeiriNo.length() == 0)) {
			projTableCacheModel.mitumoriSeiriNo = null;
		}

		projTableCacheModel.shukanSekkeiCd = getShukanSekkeiCd();

		String shukanSekkeiCd = projTableCacheModel.shukanSekkeiCd;

		if ((shukanSekkeiCd != null) && (shukanSekkeiCd.length() == 0)) {
			projTableCacheModel.shukanSekkeiCd = null;
		}

		projTableCacheModel.sekkeiTogoSaki = getSekkeiTogoSaki();

		String sekkeiTogoSaki = projTableCacheModel.sekkeiTogoSaki;

		if ((sekkeiTogoSaki != null) && (sekkeiTogoSaki.length() == 0)) {
			projTableCacheModel.sekkeiTogoSaki = null;
		}

		projTableCacheModel.sekkeiBunkatuMoto = getSekkeiBunkatuMoto();

		String sekkeiBunkatuMoto = projTableCacheModel.sekkeiBunkatuMoto;

		if ((sekkeiBunkatuMoto != null) && (sekkeiBunkatuMoto.length() == 0)) {
			projTableCacheModel.sekkeiBunkatuMoto = null;
		}

		projTableCacheModel.jutakuSekkeiTaisho = getJutakuSekkeiTaisho();

		String jutakuSekkeiTaisho = projTableCacheModel.jutakuSekkeiTaisho;

		if ((jutakuSekkeiTaisho != null) &&
			(jutakuSekkeiTaisho.length() == 0)) {

			projTableCacheModel.jutakuSekkeiTaisho = null;
		}

		projTableCacheModel.honsitenRid = getHonsitenRid();

		String honsitenRid = projTableCacheModel.honsitenRid;

		if ((honsitenRid != null) && (honsitenRid.length() == 0)) {
			projTableCacheModel.honsitenRid = null;
		}

		projTableCacheModel.honsitenGid = getHonsitenGid();

		String honsitenGid = projTableCacheModel.honsitenGid;

		if ((honsitenGid != null) && (honsitenGid.length() == 0)) {
			projTableCacheModel.honsitenGid = null;
		}

		projTableCacheModel.orgYkoji = getOrgYkoji();

		String orgYkoji = projTableCacheModel.orgYkoji;

		if ((orgYkoji != null) && (orgYkoji.length() == 0)) {
			projTableCacheModel.orgYkoji = null;
		}

		projTableCacheModel.orgJKOJI = getOrgJKOJI();

		String orgJKOJI = projTableCacheModel.orgJKOJI;

		if ((orgJKOJI != null) && (orgJKOJI.length() == 0)) {
			projTableCacheModel.orgJKOJI = null;
		}

		projTableCacheModel.orgMdd = getOrgMdd();

		String orgMdd = projTableCacheModel.orgMdd;

		if ((orgMdd != null) && (orgMdd.length() == 0)) {
			projTableCacheModel.orgMdd = null;
		}

		projTableCacheModel.orgPdd = getOrgPdd();

		String orgPdd = projTableCacheModel.orgPdd;

		if ((orgPdd != null) && (orgPdd.length() == 0)) {
			projTableCacheModel.orgPdd = null;
		}

		projTableCacheModel.orgEsmas = getOrgEsmas();

		String orgEsmas = projTableCacheModel.orgEsmas;

		if ((orgEsmas != null) && (orgEsmas.length() == 0)) {
			projTableCacheModel.orgEsmas = null;
		}

		projTableCacheModel.orgPrist = getOrgPrist();

		String orgPrist = projTableCacheModel.orgPrist;

		if ((orgPrist != null) && (orgPrist.length() == 0)) {
			projTableCacheModel.orgPrist = null;
		}

		projTableCacheModel.procSekkei = getProcSekkei();

		String procSekkei = projTableCacheModel.procSekkei;

		if ((procSekkei != null) && (procSekkei.length() == 0)) {
			projTableCacheModel.procSekkei = null;
		}

		projTableCacheModel.procMitumori = getProcMitumori();

		String procMitumori = projTableCacheModel.procMitumori;

		if ((procMitumori != null) && (procMitumori.length() == 0)) {
			projTableCacheModel.procMitumori = null;
		}

		projTableCacheModel.procSekkeiOen = getProcSekkeiOen();

		String procSekkeiOen = projTableCacheModel.procSekkeiOen;

		if ((procSekkeiOen != null) && (procSekkeiOen.length() == 0)) {
			projTableCacheModel.procSekkeiOen = null;
		}

		projTableCacheModel.procSekkeiTogo = getProcSekkeiTogo();

		String procSekkeiTogo = projTableCacheModel.procSekkeiTogo;

		if ((procSekkeiTogo != null) && (procSekkeiTogo.length() == 0)) {
			projTableCacheModel.procSekkeiTogo = null;
		}

		projTableCacheModel.procSekkeiBunkatu = getProcSekkeiBunkatu();

		String procSekkeiBunkatu = projTableCacheModel.procSekkeiBunkatu;

		if ((procSekkeiBunkatu != null) && (procSekkeiBunkatu.length() == 0)) {
			projTableCacheModel.procSekkeiBunkatu = null;
		}

		projTableCacheModel.procSekkeiJutaku = getProcSekkeiJutaku();

		String procSekkeiJutaku = projTableCacheModel.procSekkeiJutaku;

		if ((procSekkeiJutaku != null) && (procSekkeiJutaku.length() == 0)) {
			projTableCacheModel.procSekkeiJutaku = null;
		}

		projTableCacheModel.taketuChusiToketuKb = getTaketuChusiToketuKb();

		String taketuChusiToketuKb = projTableCacheModel.taketuChusiToketuKb;

		if ((taketuChusiToketuKb != null) &&
			(taketuChusiToketuKb.length() == 0)) {

			projTableCacheModel.taketuChusiToketuKb = null;
		}

		projTableCacheModel.kanryoChusiStatus = getKanryoChusiStatus();

		String kanryoChusiStatus = projTableCacheModel.kanryoChusiStatus;

		if ((kanryoChusiStatus != null) && (kanryoChusiStatus.length() == 0)) {
			projTableCacheModel.kanryoChusiStatus = null;
		}

		projTableCacheModel.mitumoriKeijoShubetu = getMitumoriKeijoShubetu();

		String mitumoriKeijoShubetu = projTableCacheModel.mitumoriKeijoShubetu;

		if ((mitumoriKeijoShubetu != null) &&
			(mitumoriKeijoShubetu.length() == 0)) {

			projTableCacheModel.mitumoriKeijoShubetu = null;
		}

		projTableCacheModel.torikesiKb = getTorikesiKb();

		String torikesiKb = projTableCacheModel.torikesiKb;

		if ((torikesiKb != null) && (torikesiKb.length() == 0)) {
			projTableCacheModel.torikesiKb = null;
		}

		projTableCacheModel.kessanNendo = getKessanNendo();

		String kessanNendo = projTableCacheModel.kessanNendo;

		if ((kessanNendo != null) && (kessanNendo.length() == 0)) {
			projTableCacheModel.kessanNendo = null;
		}

		projTableCacheModel.updDate = getUpdDate();

		String updDate = projTableCacheModel.updDate;

		if ((updDate != null) && (updDate.length() == 0)) {
			projTableCacheModel.updDate = null;
		}

		projTableCacheModel.updTime = getUpdTime();

		String updTime = projTableCacheModel.updTime;

		if ((updTime != null) && (updTime.length() == 0)) {
			projTableCacheModel.updTime = null;
		}

		return projTableCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ProjTable, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ProjTable, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProjTable, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((ProjTable)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ProjTable, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ProjTable, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ProjTable, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ProjTable)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ProjTable>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private long _recId;
	private long _groupId;
	private String _groupFlag;
	private String _yosoKojiCd;
	private String _sekkeiCd;
	private String _sekkeiCdYy;
	private String _mitumoriNendo;
	private String _mitumoriCd;
	private String _kojiCd;
	private String _mitumoriSeiriNo;
	private String _shukanSekkeiCd;
	private String _sekkeiTogoSaki;
	private String _sekkeiBunkatuMoto;
	private String _jutakuSekkeiTaisho;
	private String _honsitenRid;
	private String _honsitenGid;
	private String _orgYkoji;
	private String _orgJKOJI;
	private String _orgMdd;
	private String _orgPdd;
	private String _orgEsmas;
	private String _orgPrist;
	private String _procSekkei;
	private String _procMitumori;
	private String _procSekkeiOen;
	private String _procSekkeiTogo;
	private String _procSekkeiBunkatu;
	private String _procSekkeiJutaku;
	private String _taketuChusiToketuKb;
	private String _kanryoChusiStatus;
	private String _mitumoriKeijoShubetu;
	private String _torikesiKb;
	private String _kessanNendo;
	private String _updDate;
	private String _updTime;
	private ProjTable _escapedModel;

}