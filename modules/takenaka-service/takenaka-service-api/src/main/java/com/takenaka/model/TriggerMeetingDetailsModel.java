/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.takenaka.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the TriggerMeetingDetails service. Represents a row in the &quot;Trigger_Meeting_Details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.takenaka.model.impl.TriggerMeetingDetailsModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.takenaka.model.impl.TriggerMeetingDetailsImpl</code>.
 * </p>
 *
 * @author Sanjay.Panchal
 * @see TriggerMeetingDetails
 * @generated
 */
@ProviderType
public interface TriggerMeetingDetailsModel
	extends BaseModel<TriggerMeetingDetails> {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a trigger meeting details model instance should use the {@link TriggerMeetingDetails} interface instead.
	 */

	/**
	 * Returns the primary key of this trigger meeting details.
	 *
	 * @return the primary key of this trigger meeting details
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this trigger meeting details.
	 *
	 * @param primaryKey the primary key of this trigger meeting details
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the meetingdetail seqno of this trigger meeting details.
	 *
	 * @return the meetingdetail seqno of this trigger meeting details
	 */
	public long getMeetingdetailSeqno();

	/**
	 * Sets the meetingdetail seqno of this trigger meeting details.
	 *
	 * @param meetingdetailSeqno the meetingdetail seqno of this trigger meeting details
	 */
	public void setMeetingdetailSeqno(long meetingdetailSeqno);

	/**
	 * Returns the meeting seqno of this trigger meeting details.
	 *
	 * @return the meeting seqno of this trigger meeting details
	 */
	public long getMeetingSeqno();

	/**
	 * Sets the meeting seqno of this trigger meeting details.
	 *
	 * @param meetingSeqno the meeting seqno of this trigger meeting details
	 */
	public void setMeetingSeqno(long meetingSeqno);

	/**
	 * Returns the category of this trigger meeting details.
	 *
	 * @return the category of this trigger meeting details
	 */
	@AutoEscape
	public String getCategory();

	/**
	 * Sets the category of this trigger meeting details.
	 *
	 * @param category the category of this trigger meeting details
	 */
	public void setCategory(String category);

	/**
	 * Returns the floor of this trigger meeting details.
	 *
	 * @return the floor of this trigger meeting details
	 */
	@AutoEscape
	public String getFloor();

	/**
	 * Sets the floor of this trigger meeting details.
	 *
	 * @param floor the floor of this trigger meeting details
	 */
	public void setFloor(String floor);

	/**
	 * Returns the item of this trigger meeting details.
	 *
	 * @return the item of this trigger meeting details
	 */
	@AutoEscape
	public String getItem();

	/**
	 * Sets the item of this trigger meeting details.
	 *
	 * @param item the item of this trigger meeting details
	 */
	public void setItem(String item);

	/**
	 * Returns the actions of this trigger meeting details.
	 *
	 * @return the actions of this trigger meeting details
	 */
	@AutoEscape
	public String getActions();

	/**
	 * Sets the actions of this trigger meeting details.
	 *
	 * @param actions the actions of this trigger meeting details
	 */
	public void setActions(String actions);

	/**
	 * Returns the response_duedate of this trigger meeting details.
	 *
	 * @return the response_duedate of this trigger meeting details
	 */
	public Date getRESPONSE_DUEDATE();

	/**
	 * Sets the response_duedate of this trigger meeting details.
	 *
	 * @param RESPONSE_DUEDATE the response_duedate of this trigger meeting details
	 */
	public void setRESPONSE_DUEDATE(Date RESPONSE_DUEDATE);

	/**
	 * Returns the person in charge of this trigger meeting details.
	 *
	 * @return the person in charge of this trigger meeting details
	 */
	@AutoEscape
	public String getPersonInCharge();

	/**
	 * Sets the person in charge of this trigger meeting details.
	 *
	 * @param personInCharge the person in charge of this trigger meeting details
	 */
	public void setPersonInCharge(String personInCharge);

	/**
	 * Returns the created by of this trigger meeting details.
	 *
	 * @return the created by of this trigger meeting details
	 */
	@AutoEscape
	public String getCreatedBy();

	/**
	 * Sets the created by of this trigger meeting details.
	 *
	 * @param createdBy the created by of this trigger meeting details
	 */
	public void setCreatedBy(String createdBy);

	/**
	 * Returns the created on of this trigger meeting details.
	 *
	 * @return the created on of this trigger meeting details
	 */
	public Date getCreatedOn();

	/**
	 * Sets the created on of this trigger meeting details.
	 *
	 * @param createdOn the created on of this trigger meeting details
	 */
	public void setCreatedOn(Date createdOn);

	/**
	 * Returns the modified by of this trigger meeting details.
	 *
	 * @return the modified by of this trigger meeting details
	 */
	@AutoEscape
	public String getModifiedBy();

	/**
	 * Sets the modified by of this trigger meeting details.
	 *
	 * @param modifiedBy the modified by of this trigger meeting details
	 */
	public void setModifiedBy(String modifiedBy);

	/**
	 * Returns the modified on of this trigger meeting details.
	 *
	 * @return the modified on of this trigger meeting details
	 */
	public Date getModifiedOn();

	/**
	 * Sets the modified on of this trigger meeting details.
	 *
	 * @param modifiedOn the modified on of this trigger meeting details
	 */
	public void setModifiedOn(Date modifiedOn);

	/**
	 * Returns the is active of this trigger meeting details.
	 *
	 * @return the is active of this trigger meeting details
	 */
	public boolean getIsActive();

	/**
	 * Returns <code>true</code> if this trigger meeting details is is active.
	 *
	 * @return <code>true</code> if this trigger meeting details is is active; <code>false</code> otherwise
	 */
	public boolean isIsActive();

	/**
	 * Sets whether this trigger meeting details is is active.
	 *
	 * @param isActive the is active of this trigger meeting details
	 */
	public void setIsActive(boolean isActive);

}